{
  "hash": "9f2b6c34ecc684e7ec833c47d4611431",
  "result": {
    "markdown": "---\ntitle: \"Blog Post 4\"\nsubtitle: \"Continuing Exploratory Analysis \"\nauthor: \"\"\ndate: \"2024-04-03\"\ndate-modified: \"2024-04-03\"\ndraft: FALSE\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(MASS)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'MASS'\n\nThe following object is masked from 'package:dplyr':\n\n    select\n```\n:::\n\n```{.r .cell-code}\ncompas_scores_clean <- read_csv(\"dataset/compas-scores-clean.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 60843 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (3): Sex, Race, ScoreText\ndbl  (4): Person_ID, Age, RawScore, DecileScore\ndate (1): DateOfBirth\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nmodel <- polr(as.factor(DecileScore) ~ Sex, data = compas_scores_clean, Hess=TRUE)\nmodel\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nCall:\npolr(formula = as.factor(DecileScore) ~ Sex, data = compas_scores_clean, \n    Hess = TRUE)\n\nCoefficients:\n  SexMale \n0.2398502 \n\nIntercepts:\n        -1|1          1|2          2|3          3|4          4|5          5|6 \n-7.026391496 -0.642503205  0.006575047  0.570739527  0.953044932  1.351940665 \n         6|7          7|8          8|9         9|10 \n 1.796170065  2.259116253  2.838405220  3.778964772 \n\nResidual Deviance: 249899.29 \nAIC: 249921.29 \n```\n:::\n\n```{.r .cell-code}\nsummary(model)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nCall:\npolr(formula = as.factor(DecileScore) ~ Sex, data = compas_scores_clean, \n    Hess = TRUE)\n\nCoefficients:\n         Value Std. Error t value\nSexMale 0.2399    0.01725    13.9\n\nIntercepts:\n     Value    Std. Error t value \n-1|1  -7.0264   0.1497   -46.9228\n1|2   -0.6425   0.0159   -40.3333\n2|3    0.0066   0.0157     0.4198\n3|4    0.5707   0.0158    36.1351\n4|5    0.9530   0.0161    59.2291\n5|6    1.3519   0.0166    81.3858\n6|7    1.7962   0.0175   102.7372\n7|8    2.2591   0.0188   119.9679\n8|9    2.8384   0.0214   132.7291\n9|10   3.7790   0.0286   131.9669\n\nResidual Deviance: 249899.29 \nAIC: 249921.29 \n```\n:::\n\n```{.r .cell-code}\npredictions <- predict(model, compas_scores_clean, type=\"class\")\nggplot(compas_scores_clean, aes(x=Sex, y=DecileScore)) +\n  geom_boxplot() +\n  labs(title=\"Distribution of DecileScores by Sex\",\n       x=\"Sex\",\n       y=\"DecileScore\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](blog-post-4_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "blog-post-4_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}