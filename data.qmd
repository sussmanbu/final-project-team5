---
title: Data
description: We describe the sources of our data and the cleaning process.
toc: true
draft: false
---

## Data Sources

### Data Set 1: COMPAS Recidivism Dataset(1)

#### Source

[Link To Dataset](https://github.com/propublica/compas-analysis)

ProPublica conducted an in-depth analysis of the COMPAS algorithm by obtaining data from the Broward County Sheriff’s Office in Florida through a public records request. This dataset included COMPAS scores and the components used by COMPAS algoraithm to calculate COMPAS score. ProPublica compiled these individuals' criminal histories by matching COMPAS scores with public records using names and birthdates. They defined recidivism based on Northpointe’s criteria, focusing on new criminal offenses within two years of a COMPAS assessment. Their analysis included examining the distribution of COMPAS scores, using logistic regression to assess the impact of various factors on these scores, and employing a Cox proportional hazards model to compare actual recidivism rates against predictions.

#### Layout

Within the GitHub repository there are several data files. For the purposes of our analysis, we will only be focusing on the `compas-scores-raw.csv` file which contains the raw data obtained by ProPublica via a public records request. This file contains 28 variables. Of these 28, we have determined that we will be focusing on the following 8:

-   **individual_ID:** The unique identifier for each individual
-   **Sex_Code_Text:** Indicates the individual's sex. We have re-coded this variable to `Sex` in the cleaned dataset.
-   **Ethnic_Code_Text**: Indicates a individual's ethnicity. Possible values are Caucasian, African-American, Hispanic, Other, Asian, and African-Am. We have recoded this variable to `Race` in the cleaned dataset.
-   **DateOfBirth:** Indicates the individual's date of birth
-   **Age:** The individual's age, calculated from DOB during data cleaning.
-   **RawScore:** The individual's raw COMPAS score. This is the raw score generated by the COMPAS algorithm and, in this dataset, ranges from -4.79 to 51.
-   **DecileScore:** The individual's decile compas score. This score is generated by ranking individuals by their raw scores, dividing this ranked list into ten equal parts (deciles), and assigning a score from 1 to 10 to each individual based on the decile they fall into, effectively categorizing them into relative risk levels.
-   **ScoreText:** The individual's categorized recidivism risk. Either Low, Medium, High, or N/A.

#### Cleaning and Loading

**Below is the data cleaning script**

```{r}
library(tidyverse)
library(dplyr)      # For attribute selection
library(lubridate)  # For calculating COMPAS person's age

compas_data <- read_csv(here::here("dataset", "compas-scores-raw.csv"))

## Clean the data

# Calculate age based on DateOfBirth and Screening_Date
# Convert date strings to Date objects
compas_data$DateOfBirth <- as.Date(compas_data$DateOfBirth, format="%m/%d/%y")
current_year <- year(Sys.Date())
compas_data$Age <- current_year - year(compas_data$DateOfBirth)
compas_data$Age <- ifelse(compas_data$Age < 0, compas_data$Age + 100, compas_data$Age)

compas_data_clean <- compas_data %>%
  select(Person_ID, Sex = Sex_Code_Text, Race = Ethnic_Code_Text, DateOfBirth, Age, RawScore, DecileScore, ScoreText) %>% 
  drop_na()

write_csv(compas_data_clean, file = here::here("dataset", "compas-scores-clean.csv"))

save(compas_data_clean, file = here::here("dataset/compas-scores-clean.RData"))
```

The above code:

1.  load the data from `compas-scores-raw.csv` in our `dataset` directory
2.  Then it tells R that `DateOfBirth` field follows `mm/dd/yyyy` format and `Screening_Date` follows `mm/dd/yyyy hh:mm` format using `mdy` and `mdy_hm` function from `lubridate` package.
3.  Using the difference in days between `DateOfBirth` and `Screening_Date`, we can calculate the age of that person. We then save the age to a field called `Age`.
4.  Then using `dplyr` package, we project on only those fields that we think is useful to us and drop any triples with na values.
5.  We save the clean data to `compas-scores-clean.csv` to our `dataset` directory.

Here is the visualization of cleaned COMPAS(1) dataset:

```{r}
hist(compas_data_clean$Age, main="Age Distribution", xlab="Age", col="blue", breaks=50)
barplot(table(compas_data_clean$Sex), main="Sex Distribution", col="salmon")
barplot(table(compas_data_clean$Race), main="Race Distribution", col="lightblue")
barplot(table(compas_data_clean$ScoreText), main="Score Category Distribution", col="lightgreen")
boxplot(RawScore ~ Race, data=compas_data_clean, main="Raw Score Distribution by Race", xlab="Race", ylab="Raw Score", col="yellow")
hist(compas_data_clean$DecileScore, main="Decile Score Distribution", xlab="Decile Score", col="gray", breaks=10)
table_sex_scoretext <- table(compas_data_clean$Sex, compas_data_clean$ScoreText)
barplot(table_sex_scoretext, main="Score Text by Sex", col=c("green", "red", "blue"), legend=TRUE)
```

### Data Set 2: Iowa Recidivism Dataset

#### Source

[Link To Dataset](https://data.iowa.gov/Correctional-System/Iowa-Probation-Recidivism-Status/pax6-5xni/about_data)

The dataset is provided by Iowa Department of Corrections, Iowa Correction Offenders Network, and it is used to create the Iowa probation recidivism annual report. This dataset contains deidentified case level records of individuals starting probation supervision in the community. Data begins with the FY 2016 cohort. It also provides an individual's status at three years to assess whether probation was successful or whether the individual was reincarcerated. The dataset appears to detail recidivism among individuals released from prison, focusing on various demographic, legal, and post-release supervisory characteristics.

#### Layout

We decide to use this dataset to combine with the compas dataset, and we focused on the following four variables:

-   **Race:** The individual's race or ethnicity.
-   **Sex:** The individual's biological sex.
-   **Age:** The individual's age at start of probation.
-   **Reincarcerated:** Indicator of whether the individual was incarcerated.

#### Cleaning and Loading

**Below is the data cleaning script**

```{r}
iowa_data <- read_csv(here::here("dataset", "Iowa_Probation_Recidivism_Status_20240403.csv"))
iowa_data_clean <- iowa_data %>%
  select(sex = Sex, race = Race, age = Age, reincarcerated = Reincarcerated)
summary(iowa_data_clean)
```

The above code:

1.  load the data from `Iowa_Probation_Recidivism_Status_20240403.csv` in our `dataset` directory
2.  select the variables that we want to analyse and rename them in order to prepare for merging the dataset
3.  summarize and provide a overview of the data in the cleaned dataset

Here is the visualization of the cleaned Iowa dataset:

```{r}
hist(iowa_data_clean$age, main="Age Distribution", xlab="Age", col="blue", breaks=50)
barplot(table(iowa_data_clean$sex), main="Sex Distribution", col="salmon")
barplot(table(iowa_data_clean$race), main="Race Distribution", col="lightblue")
barplot(table(iowa_data_clean$reincarcerated), main="incarceration Distribution", col="lightyellow")
```

### Data Set 3: COMPAS Recidivism Dataset(2)

#### Source

[Link To Dataset](https://github.com/propublica/compas-analysis)

This dataset is also used by ProPublica for analysing COMPAS algorithm and it contains two years of data from the Broward County Sheriff’s Office in Florida. In this dataset, there are more detailed information about the individual, including details like individual's status at two years to assess whether the individual was reincarcerated.

#### Layout

To merge this dataset with the Iowa dataset in order to study the general trend in how sex, age, and race have an effect on recidivisim, we also select the following four variables:

-   **race:** The individual's race or ethnicity.
-   **sex:** The individual's biological sex.
-   **age:** The individual's age at start of probation.
-   **reincarcerated:** Indicator of whether the individual was incarcerated.

Cleaning the dataset

```{r Data cleaning for compas_two_years_violent}
# rename decile_score name (weird because of the index)
colnames(compas_two_years_violent)[which(colnames(compas_two_years_violent) == "decile_score...40")] <- "decile_score"

# keep only relative fields
compas_two_years_violent <- compas_two_years_violent  %>%
  select(sex, age, race, decile_score, score_text, reincarcerated)

# Delete records with decile_score = -1
compas_two_years_violent <- compas_two_years_violent %>%
  filter(decile_score != -1)
```

The above code:

1.  Load the dataset and rename the field `decile_score...40` to `decile_score`. Original data consists of the index number for decile_score field.
2.  Keep only the relative fields: `sex`, `age`, `race`, `decile_score`, `score_text` and `reincarcerated`.
3.  Delete the 5 useless records with -1 decile_score (Those records have a lot of N/A).

```{r}
new_compas <- read_csv(here::here("dataset", "compas-scores-two-years-violent.csv"))
new_compas_clean <- new_compas %>%
  select(sex, age, race, reincarcerated)
summary(new_compas_clean)
```

The above code:

1.  load the data from `compas-scores-two-years-violent.csv` in our `dataset` directory
2.  select the variables that we want to analyse and rename them in order to prepare for merging the dataset
3.  summarize and provide a overview of the data in the cleaned dataset

Here is the visualization of the cleaned COMPAS(2) dataset:

```{r}
hist(new_compas_clean$age, main="Age Distribution", xlab="Age", col="blue", breaks=50)
barplot(table(new_compas_clean$sex), main="Sex Distribution", col="salmon")
barplot(table(new_compas_clean$race), main="Race Distribution", col="lightblue")
barplot(table(new_compas_clean$reincarcerated), main="incarceration Distribution", col="lightyellow")
```

### Merged dataset

Our merged dataset combines data from Florida and Iowa, focusing on variables such as sex, age, race, and incarceration status. Previously, we prepared the Iowa dataset and the COMPAS dataset by cleaning these variables. Additionally, we have added a column to each dataset indicating the respective state from which the data originates.

```{r}
new_compas_clean <- new_compas_clean %>% mutate(state = "Florida")
iowa_data_clean <- iowa_data_clean %>% mutate(state = "Iowa")
combined_data <- bind_rows(new_compas_clean, iowa_data_clean)
summary(combined_data)
```

Here is the visualization of the merged dataset:

```{r}
hist(combined_data$age, main="Age Distribution", xlab="Age", col="blue", breaks=50)
barplot(table(combined_data$sex), main="Sex Distribution", col="salmon")
barplot(table(combined_data$race), main="Race Distribution", col="lightblue")
barplot(table(combined_data$state), main="State Distribution", col="lightgreen")
barplot(table(combined_data$reincarcerated), main="incarceration Distribution", col="lightyellow")
```

## R Packages Used
